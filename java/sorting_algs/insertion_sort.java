package sorting_algs;

import java.util.Arrays;
import java.util.Scanner;

public class insertion_sort {
    public static void main(String[] args) {
int [] unsorted = {675,420,435,959,857,855,106,682,643,665,681,201,281,459,62,58,931,569,91,921,363,52,1,946,871,981,997,510,106,108,491,736,386,430,983,283,636,380,98,322,43,734,593,899,104,891,970,505,4,707,272,76,56,524,70,343,677,798,799,574,592,619,171,474,957,909,806,995,804,950,363,769,961,246,430,430,605,85,847,699,66,918,403,574,116,259,460,557,459,451,520,881,133,677,183,978,569,223,134,891,349,647,896,674,136,613,268,807,604,500,10,93,852,44,719,754,716,629,673,335,5,17,564,220,447,222,370,244,329,966,913,887,740,678,870,426,109,96,495,168,26,372,326,995,796,234,610,99,306,997,544,722,974,948,206,329,1,778,544,571,33,432,644,812,43,228,863,565,108,801,698,767,665,938,176,161,526,627,110,520,627,39,437,641,939,120,748,190,574,534,965,659,655,559,586,989,631,159,249,982,992,396,19,247,54,241,554,210,103,317,632,274,268,207,52,345,167,249,648,998,996,270,286,34,620,368,225,197,645,650,863,194,629,343,340,299,413,334,442,450,443,475,804,542,247,475,882,326,399,699,935,765,710,532,94,970,303,175,939,778,23,82,422,525,344,77,553,378,994,188,851,191,381,696,710,49,137,756,578,36,830,249,4,495,352,199,865,104,705,640,157,760,890,394,465,234,21,714,704,781,810,943,730,923,145,570,425,269,983,840,449,478,89,257,637,689,29,168,684,655,473,599,899,73,43,695,508,910,279,873,851,449,455,92,657,811,892,163,250,400,347,474,201,385,715,13,164,829,259,373,314,460,633,24,40,906,900,572,75,229,195,448,479,427,910,478,694,122,522,385,461,909,443,367,888,600,337,75,150,737,437,458,39,491,957,119,953,88,971,357,474,906,852,9,960,790,252,234,725,429,150,446,478,88,865,642,154,176,591,509,519,16,727,250,855,423,226,192,235,846,258,463,566,554,383,457,802,486,227,699,544,160,45,775,720,62,707,615,89,621,496,632,250,310,301,945,23,581,996,422,919,471,239,61,162,784,839,492,896,343,393,461,149,102,202,920,641,273,979,267,635,82,928,312,765,247,771,859,82,857,862,295,140,842,301,908,291,106,313,550,608,45,872,29,767,668,106,789,107,79,583,90,995,756,844,945,986,415,29,429,876,486,748,573,861,248,471,215,812,881,424,803,100,108,918,382,795,814,888,402,946,747,10,630,893,159,136,927,742,507,39,819,282,97,635,461,517,790,779,74,769,28,761,215,81,401,797,861,419,607,81,274,788,225,703,709,550,46,167,222,733,493,981,792,111,782,791,140,273,321,900,226,446,717,447,126,98,439,891,117,445,268,305,499,244,837,156,91,681,311,774,426,354,731,643,248,495,976,19,428,533,3,677,730,287,577,551,724,181,337,650,107,972,41,954,272,557,451,660,659,146,339,240,910,922,632,165,544,614,68,4,698,180,834,692,871,393,436,324,916,676,597,472,258,53,593,179,764,780,407,851,217,102,665,553,128,105,192,143,899,961,870,909,98,964,961,644,132,767,729,931,628,620,375,896,622,723,361,150,740,876,790,980,682,95,59,823,642,219,399,326,349,667,1,539,727,255,316,785,646,846,341,416,846,416,345,845,147,306,605,215,221,707,235,21,9,187,805,787,362,324,426,612,843,0,658,345,183,714,568,279,767,776,459,750,744,750,520,957,231,630,56,219,129,363,954,681,51,198,13,324,106,127,995,110,176,165,125,996,941,976,159,738,662,683,512,769,604,48,673,3,611,924,743,886,453,313,183,28,851,330,973,860,191,633,312,440,425,452,837,143,868,543,783,149,476,275,880,951,527,179,343,347,381,791,702,315,629,249,198,66,37,685,281,23,53,934,204,743,753,868,375,455,466,281,883,38,879,730,926,17,365,811,398,145,520,587,456,359,197,815,107,343,670,330,230,202,184,2,251,581,885,158,711,735,457,355,998,552,19,158,752,685,474,836,954,985,585,397,794,53,865,502,803,215,761,22,552,800,108,496,777,959,600,800,144,476,534,601,143,839,715,50,135,295,66,625,479,454,291,351,255,169,956,596,856,606,251,595,435,534,613,630,586,882,782,388,327,978,861,215,199,999,611,122,386,578,433,943,793,966,11,847,29,993,324,411,56,200,487,375,186,592,543,470,563,208,900,913,551,363,194,576,171,85,912,563,323,611,290,282,197,860,220,865,741,806,475,583,998,297,625,478,874,73,213,285,607,335,37,152,494,166,537,697,808,211,429,440,983};

        /* 
        Scanner scan = new Scanner(System.in);

        System.out.println("Inserire lunghezza array: ");
        int N = scan.nextInt();

        int[] ints = new int[N];

        System.out.println("Inserire elementi: ");
        for(int i = 0; i<N; i++) {
            int inp = scan.nextInt();
            ints[i] = inp;
        }
        

        int counter = sort(ints);
        
        System.out.println("Elementi:");
        for (int i = 0; i < N; i++) {
            System.out.println(ints[i]);
        }
        */
        int counter = sort(unsorted);
        System.out.println(Arrays.toString(unsorted));

        System.out.println("Iterazione:");
        System.out.println(counter);
    }
    
    public static int sort(int[] arr) {
        int counter = 0;
        for (int i = 1; i < arr.length; i++) {
            int currentEl = arr[i];
            int j = i-1;
            int inst = i;
            while (j>=0) {
                if (!(currentEl < arr[j])) break;
                
                int temp = arr[j];
                arr[j] = currentEl;
                arr[inst] = temp;
                inst--;
                
                j--;
                counter++;
            }
            counter++;
        }
        return counter;
    }
}
